{"version":3,"sources":["components/Navbar.js","components/Form.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","to","role","placeholder","onClick","togglemode","htmlfor","Form","text","setText","useState","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","handleUpClick","newText","toUpperCase","showalert","handleLoClick","toLowerCase","handleClear","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleWhitespace","split","join","trim","length","About","myStyle","setMystyle","btn","setbtn","data-bs-parent","toggle","Alert","alert","typ","msg","propType","PropTypes","string","isRequired","defaultProps","App","setmode","setalert","message","setTimeout","BrowserRouter","body","Routes","Route","exact","path","element","showAlert","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.563300af.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n  <>  \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/About\">about</Link>\r\n        </li>\r\n        \r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n     \r\n        </form>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Default switch checkbox input</label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n</>\r\n)}\r\nNavbar.propType={\r\n    title: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps ={\r\n    title:'set title'\r\n}","import React ,{useState}from 'react'\r\n\r\n\r\nexport default function Form(props) {\r\n    const [text,setText] = useState(\"\");\r\n\r\n    const handleWhitespace=()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showalert(\"Whitespaces are removed\",\"Success\")\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n        let text=document.getElementById(\"my box\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showalert(\"Copied to Clipboard\",\"Success\")\r\n\r\n    }\r\n    const handleUpClick = ()=>{\r\n        \r\n        let newText =text.toUpperCase();\r\n        setText(newText)\r\n        props.showalert(\"Converted to Upwercase\",\"Success\")\r\n    }\r\n    const  handleLoClick= ()=>{\r\n    \r\n        let newText =text.toLowerCase();\r\n        setText(newText)\r\n        props.showalert(\"Converted to Lowercase\",\"Success\")\r\n    }\r\n    const handleClear = ()=>{\r\n        \r\n        let newText =(\"\");\r\n        setText(newText)\r\n        props.showalert(\"Texts are Cleared\",\"Success\")\r\n    }\r\n    const handleOnchange = (event)=>{\r\n        console.log(\"onchange\");\r\n        setText(event.target.value)\r\n    }\r\n    \r\nreturn(\r\n    <>\r\n<div className=\"container\" style={{ color:props.mode==='dark'?'white':'#042743'}}>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"my box\" value={text} style={{ backgroundColor:props.mode==='light'?'white':'grey', color:props.mode==='dark'?'white':'#042743'}} onChange={handleOnchange} rows=\"8\"></textarea>\r\n    </div>\r\n    <div className='my-2'>\r\n    <button className=\"btn btn-primary\"onClick={handleUpClick} >Convert to uppercase</button>\r\n    <button className=\"btn btn-primary mx-2\"onClick={handleLoClick} >Convert to uppercase</button>\r\n    <button className=\"btn btn-primary  \"onClick={handleClear} >ClearText</button>\r\n    <button className=\"btn btn-primary mx-1\"onClick={handleCopy} >CopyText</button>\r\n    <button className=\"btn btn-primary mx-1\"onClick={handleWhitespace} >Remove whitespace</button>\r\n    </div>\r\n</div>\r\n<div className=\"conatiner\"style={{ color:props.mode==='dark'?'white':'#042743'}}>\r\n    <h2>Your text summary</h2>\r\n    <p> { text.trim().length===0?0:text.trim().split(\" \").length} words  and {text.trim().length} character </p>\r\n    <p> {0.008*text.split(\" \").length} minutes to read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter somthing in box\"}</p>\r\n\r\n</div>\r\n</>  \r\n)\r\n}\r\n\r\n","import React,{useState} from 'react';\r\n\r\nexport default function About() {\r\n    const [myStyle, setMystyle] = useState({\r\n        color: 'black',\r\n        backgroundColor:'white'\r\n    })\r\n    const [btn, setbtn] = useState('unable to Darkmode')\r\n    const toggle=()=>{\r\n        if(myStyle.color==='black'){\r\n            setMystyle({\r\n                color:'white',\r\n                backgroundColor:'black'\r\n              \r\n        })\r\n        setbtn('unable to Lightmode')  \r\n        }\r\n        else{\r\n            setMystyle({  color:'black',\r\n            backgroundColor:'white'\r\n        })\r\n        setbtn('unable to Darkemode') \r\n        }\r\n    }    \r\n        \r\n\r\n  return (\r\n    <>\r\n    \r\n    <div className='container'style={myStyle}>\r\n    <h2 className='heading my-2'>About Us</h2>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n    <div className=\"accordion-item \">\r\n        <h2 className=\"accordion-header\">\r\n        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n            Accordion Item #1\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            <strong style={myStyle}>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\">\r\n        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            Accordion Item #2\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\">\r\n        <button className=\"accordion-button collapsed\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n            Accordion Item #3\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    \r\n    <button onClick={toggle}  type=\"button\" className=\"btn btn-primary\">{btn}</button>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    \r\n    props.alert&& <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert.typ}</strong>:{props.alert.msg}\r\n    </div>\r\n    \r\n  )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  \n} from \"react-router-dom\";\n\n\n\n\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState();\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      typ:type\n    })\n    setTimeout(() => {\n      setalert(null);\n    },1500);\n\n  }\n  \n  const togglemode=()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor ='#042743';\n      showalert(\"Dark mode has been unabled\",\"Success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor ='white';\n      showalert(\"Light mode has been unabled\",\"Success\");\n    }\n  }\n  return(\n    // <> \n      \n    //   <Navbar title=\"textutils\" mode={mode} togglemode={togglemode}/>\n    //   <Alert alert={alert}/>\n    //   <div className=\"container my-3\">\n    //   <Form showalert={showalert} heading=\"Enter the text to analyze\" mode={mode}/>  \n            \n    //   </div> \n    //   return (\n\n<>\n\n  <BrowserRouter>\n\n    <Navbar title=\"TextUtils\"   mode={mode} togglemode={togglemode}/>\n    \n    <Alert alert={alert} />\n\n      \n\n\n      \n\n    \n\n   \n\n    <div className=\"container my-4\" >\n\n      <Routes>\n\n        <Route exact path=\"/about\" element={<About />}></Route>\n\n        <Route exact path=\"/\" element={ <Form showAlert={showalert} \n          heading=\"Enter Text to analyze \" \n          mode={mode}/>}>\n        </Route> \n                                       \n                                          \n\n      </Routes>\n     \n     </div>\n     </BrowserRouter>  \n </>\n                                           \n\n                                         \n\n                                       \n\n          \n\n          \n\n\n          \n\n        \n\n     \n\n\n    \n      \n   \n  );\n}        \n          \n        \n     \n     \n      \n   \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}